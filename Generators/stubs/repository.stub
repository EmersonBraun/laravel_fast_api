<?php

namespace {{ rootNamespace }}Repositories{{ subdiretory }};

use {{ rootNamespace }}Models{{ subdiretory }}\{{ nameClass }};
use {{ rootNamespace }}Repositories\BaseRepository;

/**
* Repository Pattern allows encapsulation of data access logic
*/
class {{ nameClass }}Repository extends BaseRepository
{
    protected $model;
    protected $obj = [];
    protected $returnType = 'error';
    protected $returnMsg = '';
    protected $returnContent = '';
    protected $statusCode = 400;
    protected $options = 0;
    
	public function __construct( {{ nameClass }} $model )
	{
		$this->model = $model;
    }

    /**
     * Example of expecific action from {{ nameClass }}Repositorie.
     * CRUD functions are inherited from BaseRepository
     *
     * @return array
     */
    public function example($foo, $bar)
    {
        try{
            $this->obj = $this->model->where(['name'=> $foo, 'age' => $bar])->get();
            $this->returnType = 'success';
            $this->statusCode = 200;
        } catch(\Throwable $th) {
            $this->returnMsg = trans('transations.load.error');
            $this->returnContent = $th->getMessage();
        }

        return $this->mountReturn();
    }
}